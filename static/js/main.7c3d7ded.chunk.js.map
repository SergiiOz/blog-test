{"version":3,"sources":["reducers/reducers.js","reducers/postsReducer.js","reducers/usersReducer.js","apis/jsonPlaceholder.js","components/UserHeader.js","actions/actionCreators.js","components/PostList.js","components/App.js","index.js"],"names":["rootReducers","combineReducers","posts","state","action","type","payload","users","store","createStore","applyMiddleware","thunk","axios","create","baseURL","UserHeader","this","props","getUser","userId","user","className","name","React","Component","connect","ownProps","find","id","dispatch","a","jsonPlaceholder","get","response","data","fetchUser","PostList","renderList","map","post","href","title","body","fetchData","console","log","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6KAKMA,EAAeC,YAAgB,CACnCC,MCN0B,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAClD,OAAQA,EAAOC,MACb,IAAK,cACH,OAAOD,EAAOE,QAChB,QACE,OAAOH,IDEXI,MEP0B,WAAyB,IAAxBJ,EAAuB,uDAAf,GAAIC,EAAW,uCAClD,OAAQA,EAAOC,MACb,IAAK,aACH,MAAM,GAAN,mBAAWF,GAAX,CAAkBC,EAAOE,UAC3B,QACE,OAAOH,MFOEK,EAFDC,YAAYT,EAAcU,YAAgBC,M,6DGRzCC,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,yCCCLC,E,kLAEFC,KAAKC,MAAMC,QAAQF,KAAKC,MAAME,U,+BAGtB,IACAC,EAASJ,KAAKC,MAAdG,KAER,OAAKA,EAIE,qBAAKC,UAAU,SAAf,SAAyBD,EAAKE,OAH5B,S,GATYC,IAAMC,WA6BhBC,eAZS,SAACtB,EAAOuB,GAC9B,MAAO,CACLN,KAAMjB,EAAMI,MAAMoB,MAAK,SAACP,GAAD,OAAUA,EAAKQ,KAAOF,EAASP,cAI/B,SAACU,GAC1B,MAAO,CACLX,QAAS,SAACU,GAAD,OAAQC,ECbI,SAACD,GACxB,8CAAO,WAAOC,GAAP,eAAAC,EAAA,sEACkBC,EAAgBC,IAAhB,iBAA8BJ,IADhD,OACCK,EADD,OAGLJ,EAAS,CACPxB,KAAM,aACNC,QAAS2B,EAASC,OALf,2CAAP,sDDY4BC,CAAUP,QAIzBH,CAA6CV,GE5BtDqB,E,4MAKJC,WAAa,WACX,OAAO,EAAKpB,MAAMf,MAAMoC,KAAI,SAACC,GAAD,OAC1B,gCACE,qBAAKlB,UAAU,0BAAf,SACE,sBAAKA,UAAU,OAAf,UACE,mBAAGA,UAAU,0CACb,sBAAKA,UAAU,UAAf,UACE,mBAAGA,UAAU,SAASmB,KAAK,KAA3B,SACGD,EAAKE,QAER,qBAAKpB,UAAU,cAAf,SAA8BkB,EAAKG,OACnC,8BACE,cAAC,EAAD,CAAYvB,OAAQoB,EAAKpB,mBAKjC,yBAfQoB,EAAKX,Q,kEALjBZ,KAAKC,MAAM0B,c,+BA2BX,OADAC,QAAQC,IAAI7B,KAAKC,MAAMf,OAChB,8BAAMc,KAAKqB,mB,GA7BCd,IAAMC,WA6CdC,eAZS,SAACtB,GACvB,MAAO,CACLD,MAAOC,EAAMD,UAIU,SAAC2B,GAC1B,MAAO,CACLc,UAAW,kBAAMd,EDzCnB,uCAAO,WAAOA,GAAP,eAAAC,EAAA,sEACkBC,EAAgBC,IAAI,UADtC,OACCC,EADD,OAGLJ,EAAS,CACPxB,KAAM,cACNC,QAAS2B,EAASC,OALf,2CAAP,2DC6CaT,CAA6CW,GCvC7CU,EARH,SAAC7B,GACX,OACE,qBAAKI,UAAU,eAAf,SACE,cAAC,EAAD,OCAN0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUzC,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJ0C,SAASC,eAAe,W","file":"static/js/main.7c3d7ded.chunk.js","sourcesContent":["import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { postsReducer } from './postsReducer';\nimport { usersReducer } from './usersReducer';\n\nconst rootReducers = combineReducers({\n  posts: postsReducer,\n  users: usersReducer,\n});\n\nconst store = createStore(rootReducers, applyMiddleware(thunk));\n\nexport default store;\n","export const postsReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'FETCH_POSTS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export const usersReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'FETCH_USER':\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n};\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com',\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUser } from '../actions/actionCreators';\n\nclass UserHeader extends React.Component {\n  componentDidMount() {\n    this.props.getUser(this.props.userId);\n  }\n\n  render() {\n    const { user } = this.props;\n\n    if (!user) {\n      return null;\n    }\n\n    return <div className=\"header\">{user.name}</div>;\n  }\n}\n\n//ownProps - this is props from component UserHeader\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: state.users.find((user) => user.id === ownProps.userId),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getUser: (id) => dispatch(fetchUser(id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserHeader);\n","// import _ from 'lodash';\nimport jsonPlaceholder from '../apis/jsonPlaceholder';\n\n//POSTS\nexport const fetchPosts = () => {\n  return async (dispatch) => {\n    const response = await jsonPlaceholder.get('/posts');\n\n    dispatch({\n      type: 'FETCH_POSTS',\n      payload: response.data,\n    });\n  };\n};\n\n//USERS\nexport const fetchUser = (id) => {\n  return async (dispatch) => {\n    const response = await jsonPlaceholder.get(`/users/${id}`);\n\n    dispatch({\n      type: 'FETCH_USER',\n      payload: response.data,\n    });\n  };\n};\n\n//use _.memoize - if pass id same, fetch will be one time\n// export const fetchUser = (id) => (dispatch) => {\n//   _fetchUser(id, dispatch);\n// };\n\n// const _fetchUser = _.memoize(async (id, dispatch) => {\n//   const response = await jsonPlaceholder.get(`/users/${id}`);\n\n//   dispatch({\n//     type: 'FETCH_USER',\n//     payload: response.date,\n//   });\n// });\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../actions/actionCreators';\nimport UserHeader from './UserHeader';\n\nclass PostList extends React.Component {\n  componentDidMount() {\n    this.props.fetchData();\n  }\n\n  renderList = () => {\n    return this.props.posts.map((post) => (\n      <div key={post.id}>\n        <div className=\"ui relaxed divided list\">\n          <div className=\"item\">\n            <i className=\"large user circle middle aligned icon\"></i>\n            <div className=\"content\">\n              <a className=\"header\" href=\"/#\">\n                {post.title}\n              </a>\n              <div className=\"description\">{post.body}</div>\n              <div>\n                <UserHeader userId={post.userId} />\n              </div>\n            </div>\n          </div>\n        </div>\n        <hr />\n      </div>\n    ));\n  };\n\n  render() {\n    console.log(this.props.posts);\n    return <div>{this.renderList()}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.posts,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchData: () => dispatch(fetchPosts()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostList);\n","import React from 'react';\nimport PostList from './PostList';\n\nconst App = (props) => {\n  return (\n    <div className=\"ui container\">\n      <PostList />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './reducers/reducers';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}